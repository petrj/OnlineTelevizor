<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:OnlineTelevizor.Views"
             x:Class="OnlineTelevizor.Views.MainPage"
             x:Name="ContentPage"
             BackgroundColor="Black"
             NavigationPage.TitleIcon="Icon.png"
             xmlns:vlc="clr-namespace:LibVLCSharp.Forms.Shared;assembly=LibVLCSharp.Forms"
             xmlns:local2="clr-namespace:OnlineTelevizor" xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit">

    <ContentPage.Resources>
        <ResourceDictionary>

            <Style x:Key="ChannelNameTextStyle" TargetType="Label">
                <Setter Property="TextColor" Value="#41b3ff"/>
                <Setter Property="Margin" Value="5,5,5,5"/>
                <Setter Property="VerticalTextAlignment" Value="Center"/>
            </Style>

            <Style x:Key="ChannelNumberTextStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="VerticalTextAlignment" Value="Center"/>
                <Setter Property="HorizontalTextAlignment" Value="Center"/>
            </Style>

            <Style x:Key="ChannelEPGTextStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="VerticalTextAlignment" Value="Start"/>
                <Setter Property="FontAttributes" Value="Italic"/>
                <Setter Property="LineBreakMode" Value="TailTruncation"/>
            </Style>

            <Style x:Key="TimeTextStyle" TargetType="Label">
                <Setter Property="TextColor" Value="Yellow"/>
                <Setter Property="VerticalTextAlignment" Value="Start"/>
                <Setter Property="HorizontalOptions" Value="Start"/>
                <Setter Property="FontAttributes" Value="None"/>
                <Setter Property="LineBreakMode" Value="NoWrap"/>
                <Setter Property="Margin" Value="0,0,0,0"/>
            </Style>

            <Style x:Key="TimeFromTextStyle" TargetType="Label">
                <Setter Property="TextColor" Value="Yellow"/>
                <Setter Property="VerticalTextAlignment" Value="Start"/>
                <Setter Property="HorizontalOptions" Value="Start"/>
                <Setter Property="FontAttributes" Value="None"/>
                <Setter Property="LineBreakMode" Value="NoWrap"/>
                <Setter Property="Margin" Value="5,0,0,0"/>
                <Setter Property="Padding" Value="0,0,0,0"/>
            </Style>

            <Style x:Key="TimeToTextStyle" TargetType="Label">
                <Setter Property="TextColor" Value="Yellow"/>
                <Setter Property="VerticalTextAlignment" Value="Start"/>
                <Setter Property="HorizontalOptions" Value="End"/>
                <Setter Property="FontAttributes" Value="None"/>
                <Setter Property="LineBreakMode" Value="NoWrap"/>
                <Setter Property="Margin" Value="0,0,5,0"/>
                <Setter Property="Padding" Value="0,0,0,0"/>
            </Style>

            <Style x:Key="NextTitleTextStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="VerticalTextAlignment" Value="Start"/>
                <Setter Property="HorizontalOptions" Value="StartAndExpand"/>
                <Setter Property="FontAttributes" Value="Italic"/>
                <Setter Property="LineBreakMode" Value="WordWrap"/>
                <Setter Property="Margin" Value="0,0,5,0"/>
            </Style>

            <Style x:Key="InfoLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="#41b3ff"/>
                <Setter Property="Margin" Value="20,0,0,0"/>
                <Setter Property="HorizontalTextAlignment" Value="Center"/>
            </Style>

            <Style x:Key="IconStyle" TargetType="Image">
                <Setter Property="BackgroundColor" Value="Transparent"/>
                <Setter Property="Margin" Value="5,0,10,0"/>
            </Style>

            <Style x:Key="ListViewStyle" TargetType="ListView">
                <Setter Property="HasUnevenRows" Value="True"/>
                <Setter Property="IsPullToRefreshEnabled" Value="True"/>
                <Setter Property="BackgroundColor" Value="Black"/>
            </Style>

            <Style x:Key="TitleTextStyle" TargetType="Label">
                <Setter Property="TextColor" Value="#41b3ff"/>
                <Setter Property="FontAttributes" Value="Bold"/>
                <Setter Property="VerticalTextAlignment" Value="Start"/>
                <Setter Property="MaxLines" Value="2"/>
            </Style>

            <Style x:Key="DescriptionTextStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="Margin" Value="0,20,0,0"/>
                <Setter Property="Padding" Value="5,5,5,5"/>
                <Setter Property="VerticalTextAlignment" Value="Center"/>
            </Style>

            <Style x:Key="LayoutGridStyle" TargetType="Grid">
                <Setter Property="Margin" Value="0,0,0,0"/>
                <Setter Property="Padding" Value="0,0,0,0"/>
                <Setter Property="HorizontalOptions" Value="FillAndExpand"/>
                <Setter Property="VerticalOptions" Value="FillAndExpand"/>
            </Style>

        </ResourceDictionary>
    </ContentPage.Resources>

    <AbsoluteLayout x:Name="absoluteLayout">

        <Grid
            x:Name="LayoutGrid"
            Style="{DynamicResource LayoutGridStyle}"
            AbsoluteLayout.LayoutBounds="0,0,1,1"
            AbsoluteLayout.LayoutFlags="All" >
            <Grid.RowDefinitions>
                    <RowDefinition Height="100*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50*" />
                <ColumnDefinition Width="50*" />
            </Grid.ColumnDefinitions>

            <ListView Grid.Column="0"
                      Grid.Row="0"
                      x:Name="ChannelsListView"
                      ItemsSource="{Binding Channels}"
                      CachingStrategy="RecycleElement"
                      IsPullToRefreshEnabled="True"
                      RefreshCommand="{Binding RefreshCommandWithNotification}"
                      IsRefreshing="{Binding IsBusy}"
                      Style="{StaticResource ListViewStyle}"
                      SelectedItem="{Binding SelectedItem, Mode=TwoWay}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <ViewCell.View>
                                <Grid
                                    local2:PressedEffect.LongPressCommand="{Binding Source={x:Reference ChannelsListView}, Path=BindingContext.LongPressCommand}"
                                    local2:PressedEffect.LongPressCommandParameter="{Binding .}"
                                    local2:PressedEffect.ShortPressCommand="{Binding Source={x:Reference ChannelsListView}, Path=BindingContext.ShortPressCommand}"
                                    local2:PressedEffect.ShortPressCommandParameter="{Binding .}">

                                    <Grid.Effects>
                                        <local2:PressedEffect />
                                    </Grid.Effects>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="{Binding Source={x:Reference ChannelsListView}, Path=BindingContext.HeightForChannelNameRow}" />
                                        <RowDefinition Height="{Binding Source={x:Reference ChannelsListView}, Path=BindingContext.HeightForChannelEPGRow}" />
                                        <RowDefinition Height="{Binding Source={x:Reference ChannelsListView}, Path=BindingContext.HeightForTimeRow}" />
                                        <RowDefinition Height="{Binding Source={x:Reference ChannelsListView}, Path=BindingContext.HeightForNextTitleRow}" />
                                        <RowDefinition Height="1" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="70" />
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Grid.RowSpan="4" Text="{Binding ChannelNumber}" Style="{DynamicResource ChannelNumberTextStyle}" FontSize="{Binding Source={x:Reference ChannelsListView}, Path=BindingContext.FontSizeForChannelNumber}" />
                                    <Label Grid.Row="0" Grid.Column="1" Margin="0,0,0,0" Text="{Binding Name}"  LineBreakMode="NoWrap" Style="{DynamicResource ChannelNameTextStyle}" FontSize="{Binding Source={x:Reference ChannelsListView}, Path=BindingContext.FontSizeForChannel}" />
                                    <ffimageloading:CachedImage Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" Source="{Binding LogoUrl}" Style="{DynamicResource IconStyle}" DownsampleToViewSize="false" DownsampleHeight="50" LoadingPlaceholder = "Empty.png"/>
                                    <Label Grid.Row="1" Grid.Column="1" Margin="0,0,0,0" Text="{Binding CurrentEPGTitle}" Style="{DynamicResource ChannelEPGTextStyle}" FontSize="{Binding Source={x:Reference ChannelsListView}, Path=BindingContext.FontSizeForChannelEPG}"/>
                                    <Label Grid.Row="2" Grid.Column="1" Text="{Binding EPGTime}" Style="{DynamicResource TimeTextStyle}" FontSize="{Binding Source={x:Reference ChannelsListView}, Path=BindingContext.FontSizeForTime}"/>
                                    <Label Grid.Row="3" Grid.Column="1" MaxLines="1" Grid.ColumnSpan="2" Text="{Binding NextTitle}" Style="{DynamicResource NextTitleTextStyle}" FontSize="{Binding Source={x:Reference ChannelsListView}, Path=BindingContext.FontSizeForNextTitle}"/>
                                    <Image Grid.Row="2" Grid.Column="2"  Source="{Binding StateIcon}" Style="{DynamicResource IconStyle}"  HeightRequest="30"/>

                                    <ProgressBar Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Progress="{Binding EPGProgress}" ProgressColor="#41b3ff" BackgroundColor="White"/>

                                </Grid>

                            </ViewCell.View>

                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>

            </ListView>

            <Grid Grid.Column="1" Grid.Row="0"
                        x:Name="StackLayoutEPGDetail"
                        Margin="0,0,0,0"
                        Padding="0,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="40*" />
                        <RowDefinition Height="40*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="33*" />
                        <ColumnDefinition Width="34*" />
                        <ColumnDefinition Width="33*" />
                    </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Text="{Binding SelectedChannelEPGTitle}"  Style="{DynamicResource TitleTextStyle}" FontSize="{Binding FontSizeForEPGTitle}"  Margin="5,5,5,5"/>

                <Label Grid.Row="1" Grid.Column="0"  Text="{Binding SelectedChannelEPGTimeStart}"  Style="{DynamicResource TimeFromTextStyle}" FontSize="{Binding FontSizeForTime}"/>
                <Image Grid.Row="1" Grid.Column="1"  x:Name="AudioPlayingImage" Source="{Binding AudioIcon}"  IsVisible="False" BackgroundColor="Transparent" HeightRequest="{Binding HeightForNextTitleRow}" />
                <Label Grid.Row="1" Grid.Column="2"  Text="{Binding SelectedChannelEPGTimeFinish}"  Style="{DynamicResource TimeToTextStyle}" FontSize="{Binding FontSizeForTime}" />

                <Grid Grid.Row="2" Grid.Column="0"  Grid.ColumnSpan="3" Margin="0,0,0,0" x:Name="ProgresssBarGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <ProgressBar Grid.Row="0" Grid.Column="0" Progress="{Binding SelectedChannelEPGProgress}" BackgroundColor="{Binding EPGProgressBackgroundColor}" />
                </Grid>

                <ScrollView Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" x:Name="ScrollViewChannelEPGDescription" BackgroundColor="{Binding EPGDescriptionBackgroundColor}"  HorizontalOptions="StartAndExpand" VerticalOptions="Start"  Margin="5,5,5,5">
                    <Label x:Name="LabelChannelEPGDescription" Text="{Binding SelectedChannelEPGDescription}"  Style="{DynamicResource DescriptionTextStyle}" FontSize="{Binding FontSizeForDescription}" />
                </ScrollView>

            </Grid>
        </Grid>

        <StackLayout x:Name="VideoStackLayout" IsVisible="True" AbsoluteLayout.LayoutBounds="0,0,1,1" AbsoluteLayout.LayoutFlags="All"
                     xct:TouchEffect.LongPressCommand="{Binding VideoLongPressCommand}">
            <vlc:VideoView IsVisible="True" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" x:Name="videoView" Margin="0,0,0,0"/>
            <StackLayout.GestureRecognizers>
                <TapGestureRecognizer Tapped="OnSingleTapped" NumberOfTapsRequired="1" />
                <TapGestureRecognizer Tapped="OnDoubleTapped" NumberOfTapsRequired="2" />
                <SwipeGestureRecognizer Direction="Left" Swiped="SwipeGestureRecognizer_Swiped"/>
                <SwipeGestureRecognizer Direction="Right" Swiped="SwipeGestureRecognizer_Swiped"/>
                <SwipeGestureRecognizer Direction="Up" Swiped="SwipeGestureRecognizer_Up"/>
                <SwipeGestureRecognizer Direction="Down" Swiped="SwipeGestureRecognizer_Down"/>
            </StackLayout.GestureRecognizers>
        </StackLayout>

        <StackLayout x:Name="NoVideoStackLayout" IsVisible="False" AbsoluteLayout.LayoutBounds="0,1.0,1,0.35" AbsoluteLayout.LayoutFlags="All" BackgroundColor="Black"
                      xct:TouchEffect.LongPressCommand="{Binding VideoLongPressCommand2}">
            <ffimageloading:CachedImage Source="{Binding PlayingChannelLogoIcon}" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand"/>
            <StackLayout.GestureRecognizers>
                <TapGestureRecognizer Tapped="OnSingleTapped" NumberOfTapsRequired="1" />
                <TapGestureRecognizer Tapped="OnDoubleTapped" NumberOfTapsRequired="2" />
                <SwipeGestureRecognizer Direction="Left" Swiped="SwipeGestureRecognizer_Swiped"/>
                <SwipeGestureRecognizer Direction="Right" Swiped="SwipeGestureRecognizer_Swiped"/>
                <SwipeGestureRecognizer Direction="Up" Swiped="SwipeGestureRecognizer_Up"/>
                <SwipeGestureRecognizer Direction="Down" Swiped="SwipeGestureRecognizer_Down"/>
            </StackLayout.GestureRecognizers>
        </StackLayout>

        <Image x:Name="CloseVideoImage" Source="Quit.png"  IsVisible="False" AbsoluteLayout.LayoutBounds="1.0,0.0,0.1,0.1" AbsoluteLayout.LayoutFlags="All" BackgroundColor="Transparent">
            <Image.GestureRecognizers>
                <TapGestureRecognizer Tapped="OnCloseVideoTapped" NumberOfTapsRequired="1" />
            </Image.GestureRecognizers>
        </Image>

        <Image x:Name="ClosePreviewVideoImage" Source="Quit.png"  IsVisible="False" AbsoluteLayout.LayoutBounds="1.0,0.7,0.1,0.1" AbsoluteLayout.LayoutFlags="All" BackgroundColor="Transparent">
            <Image.GestureRecognizers>
                <TapGestureRecognizer Tapped="OnCloseVideoTapped" NumberOfTapsRequired="1" />
            </Image.GestureRecognizers>
        </Image>

    </AbsoluteLayout>

    <ContentPage.ToolbarItems>
        <ToolbarItem x:Name="ToolbarItemFilter" Text="Filtr" Clicked="ToolbarItemFilter_Clicked" Icon="{Binding ToolbarItemFilterIcon}"/>
        <ToolbarItem x:Name="ToolbarItemQuality" Text="Kvalita" Clicked="ToolbarItemQuality_Clicked" Icon="{Binding ToolbarItemQualityIcon}"/>
        <ToolbarItem x:Name="ToolbarItemInfo" Text="Info" Clicked="Detail_Clicked" Icon="{Binding ToolbarItemInfoIcon}" />
        <ToolbarItem x:Name="ToolbarItemSettings" Text="Nastavení" Clicked="ToolbarItemSettings_Clicked" Icon="{Binding ToolbarItemSettingsIcon}" />
    </ContentPage.ToolbarItems>
</ContentPage >
